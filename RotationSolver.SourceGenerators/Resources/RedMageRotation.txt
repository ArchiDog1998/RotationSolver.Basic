// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations.Basic;
[global::RotationSolver.Basic.Attributes.Jobs(global::ECommons.ExcelServices.Job.RDM, global::ECommons.ExcelServices.Job.LTW)]
/// <summary>
/// <see href="https://na.finalfantasyxiv.com/jobguide/redmage"><strong>red mage</strong></see>
/// <br>Number of Actions: 65</br>
/// <br>Number of Traits: 0</br>
/// </summary>
public abstract partial class RedMageRotation : global::RotationSolver.Basic.Rotations.CustomRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JoltPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7503, false);
        var setting = action.Setting;
        ModifyJoltPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JoltPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyJoltPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JoltPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction JoltPvE => _JoltPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RipostePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7504, false);
        var setting = action.Setting;
        ModifyRipostePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RipostePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyRipostePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RipostePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction RipostePvE => _RipostePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerthunderPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7505, false);
        var setting = action.Setting;
        ModifyVerthunderPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerthunderPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerthunderPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerthunderPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerthunderPvE => _VerthunderPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CorpsacorpsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7506, false);
        var setting = action.Setting;
        ModifyCorpsacorpsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CorpsacorpsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyCorpsacorpsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CorpsacorpsPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction CorpsacorpsPvE => _CorpsacorpsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VeraeroPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7507, false);
        var setting = action.Setting;
        ModifyVeraeroPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VeraeroPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVeraeroPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VeraeroPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VeraeroPvE => _VeraeroPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ScatterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7509, false);
        var setting = action.Setting;
        ModifyScatterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ScatterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyScatterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ScatterPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ScatterPvE => _ScatterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerfirePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7510, false);
        var setting = action.Setting;
        ModifyVerfirePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerfirePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerfirePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerfirePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerfirePvE => _VerfirePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerstonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7511, false);
        var setting = action.Setting;
        ModifyVerstonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerstonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerstonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerstonePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerstonePvE => _VerstonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ZwerchhauPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7512, false);
        var setting = action.Setting;
        ModifyZwerchhauPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ZwerchhauPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyZwerchhauPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ZwerchhauPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ZwerchhauPvE => _ZwerchhauPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MoulinetPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7513, false);
        var setting = action.Setting;
        ModifyMoulinetPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MoulinetPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyMoulinetPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MoulinetPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction MoulinetPvE => _MoulinetPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VercurePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7514, false);
        var setting = action.Setting;
        ModifyVercurePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VercurePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVercurePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VercurePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VercurePvE => _VercurePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DisplacementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7515, false);
        var setting = action.Setting;
        ModifyDisplacementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DisplacementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyDisplacementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DisplacementPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction DisplacementPvE => _DisplacementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RedoublementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7516, false);
        var setting = action.Setting;
        ModifyRedoublementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RedoublementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyRedoublementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RedoublementPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction RedoublementPvE => _RedoublementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FlechePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7517, false);
        var setting = action.Setting;
        ModifyFlechePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FlechePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyFlechePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FlechePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction FlechePvE => _FlechePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AccelerationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7518, false);
        var setting = action.Setting;
        ModifyAccelerationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AccelerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyAccelerationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AccelerationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction AccelerationPvE => _AccelerationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ContreSixtePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7519, false);
        var setting = action.Setting;
        ModifyContreSixtePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ContreSixtePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyContreSixtePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ContreSixtePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ContreSixtePvE => _ContreSixtePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EmboldenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7520, false);
        var setting = action.Setting;
        ModifyEmboldenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EmboldenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEmboldenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EmboldenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EmboldenPvE => _EmboldenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ManaficationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7521, false);
        var setting = action.Setting;
        ModifyManaficationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ManaficationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyManaficationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ManaficationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ManaficationPvE => _ManaficationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerraisePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7523, false);
        var setting = action.Setting;
        ModifyVerraisePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerraisePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerraisePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerraisePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerraisePvE => _VerraisePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JoltIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7524, false);
        var setting = action.Setting;
        ModifyJoltIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JoltIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyJoltIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JoltIiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction JoltIiPvE => _JoltIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerflarePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7525, false);
        var setting = action.Setting;
        ModifyVerflarePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerflarePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerflarePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerflarePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerflarePvE => _VerflarePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerholyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7526, false);
        var setting = action.Setting;
        ModifyVerholyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerholyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerholyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerholyPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerholyPvE => _VerholyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRipostePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7527, false);
        var setting = action.Setting;
        ModifyEnchantedRipostePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRipostePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedRipostePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRipostePvE => _EnchantedRipostePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedZwerchhauPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7528, false);
        var setting = action.Setting;
        ModifyEnchantedZwerchhauPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedZwerchhauPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedZwerchhauPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedZwerchhauPvE => _EnchantedZwerchhauPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRedoublementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7529, false);
        var setting = action.Setting;
        ModifyEnchantedRedoublementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRedoublementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedRedoublementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRedoublementPvE => _EnchantedRedoublementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedMoulinetPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)7530, false);
        var setting = action.Setting;
        ModifyEnchantedMoulinetPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedMoulinetPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedMoulinetPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedMoulinetPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedMoulinetPvE => _EnchantedMoulinetPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerthunderIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16524, false);
        var setting = action.Setting;
        ModifyVerthunderIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerthunderIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerthunderIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerthunderIiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerthunderIiPvE => _VerthunderIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VeraeroIiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16525, false);
        var setting = action.Setting;
        ModifyVeraeroIiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VeraeroIiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVeraeroIiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VeraeroIiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VeraeroIiPvE => _VeraeroIiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ImpactPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16526, false);
        var setting = action.Setting;
        ModifyImpactPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ImpactPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyImpactPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ImpactPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ImpactPvE => _ImpactPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EngagementPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16527, false);
        var setting = action.Setting;
        ModifyEngagementPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EngagementPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEngagementPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EngagementPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EngagementPvE => _EngagementPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedReprisePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16528, false);
        var setting = action.Setting;
        ModifyEnchantedReprisePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedReprisePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedReprisePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedReprisePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedReprisePvE => _EnchantedReprisePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReprisePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16529, false);
        var setting = action.Setting;
        ModifyReprisePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReprisePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyReprisePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReprisePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReprisePvE => _ReprisePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ScorchPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)16530, false);
        var setting = action.Setting;
        ModifyScorchPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ScorchPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyScorchPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ScorchPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ScorchPvE => _ScorchPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerthunderIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)25855, false);
        var setting = action.Setting;
        ModifyVerthunderIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerthunderIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerthunderIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerthunderIiiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerthunderIiiPvE => _VerthunderIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VeraeroIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)25856, false);
        var setting = action.Setting;
        ModifyVeraeroIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VeraeroIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVeraeroIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VeraeroIiiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VeraeroIiiPvE => _VeraeroIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagickBarrierPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)25857, false);
        var setting = action.Setting;
        ModifyMagickBarrierPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagickBarrierPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyMagickBarrierPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagickBarrierPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction MagickBarrierPvE => _MagickBarrierPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResolutionPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)25858, false);
        var setting = action.Setting;
        ModifyResolutionPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResolutionPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyResolutionPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResolutionPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ResolutionPvE => _ResolutionPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerstonePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29683, false);
        var setting = action.Setting;
        ModifyVerstonePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerstonePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerstonePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerstonePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerstonePvP => _VerstonePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VeraeroIiiPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29684, false);
        var setting = action.Setting;
        ModifyVeraeroIiiPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VeraeroIiiPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVeraeroIiiPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VeraeroIiiPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VeraeroIiiPvP => _VeraeroIiiPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerholyPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29685, false);
        var setting = action.Setting;
        ModifyVerholyPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerholyPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerholyPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerholyPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerholyPvP => _VerholyPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerfirePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29686, false);
        var setting = action.Setting;
        ModifyVerfirePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerfirePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerfirePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerfirePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerfirePvP => _VerfirePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerthunderIiiPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29687, false);
        var setting = action.Setting;
        ModifyVerthunderIiiPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerthunderIiiPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerthunderIiiPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerthunderIiiPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerthunderIiiPvP => _VerthunderIiiPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _VerflarePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29688, false);
        var setting = action.Setting;
        ModifyVerflarePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="VerflarePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyVerflarePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.VerflarePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction VerflarePvP => _VerflarePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRipostePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29689, false);
        var setting = action.Setting;
        ModifyEnchantedRipostePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRipostePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedRipostePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRipostePvP => _EnchantedRipostePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedZwerchhauPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29690, false);
        var setting = action.Setting;
        ModifyEnchantedZwerchhauPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedZwerchhauPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedZwerchhauPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedZwerchhauPvP => _EnchantedZwerchhauPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRedoublementPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29691, false);
        var setting = action.Setting;
        ModifyEnchantedRedoublementPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRedoublementPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedRedoublementPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRedoublementPvP => _EnchantedRedoublementPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRipostePvP_29692Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29692, false);
        var setting = action.Setting;
        ModifyEnchantedRipostePvP_29692(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRipostePvP_29692"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedRipostePvP_29692(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRipostePvP_29692"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRipostePvP_29692 => _EnchantedRipostePvP_29692Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedZwerchhauPvP_29693Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29693, false);
        var setting = action.Setting;
        ModifyEnchantedZwerchhauPvP_29693(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedZwerchhauPvP_29693"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedZwerchhauPvP_29693(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedZwerchhauPvP_29693"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedZwerchhauPvP_29693 => _EnchantedZwerchhauPvP_29693Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedRedoublementPvP_29694Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29694, false);
        var setting = action.Setting;
        ModifyEnchantedRedoublementPvP_29694(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedRedoublementPvP_29694"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedRedoublementPvP_29694(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedRedoublementPvP_29694"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedRedoublementPvP_29694 => _EnchantedRedoublementPvP_29694Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResolutionPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29695, false);
        var setting = action.Setting;
        ModifyResolutionPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResolutionPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyResolutionPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResolutionPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ResolutionPvP => _ResolutionPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ResolutionPvP_29696Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29696, false);
        var setting = action.Setting;
        ModifyResolutionPvP_29696(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ResolutionPvP_29696"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyResolutionPvP_29696(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ResolutionPvP_29696"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ResolutionPvP_29696 => _ResolutionPvP_29696Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _MagickBarrierPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29697, false);
        var setting = action.Setting;
        ModifyMagickBarrierPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="MagickBarrierPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyMagickBarrierPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.MagickBarrierPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction MagickBarrierPvP => _MagickBarrierPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FrazzlePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29698, false);
        var setting = action.Setting;
        ModifyFrazzlePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FrazzlePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyFrazzlePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FrazzlePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction FrazzlePvP => _FrazzlePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CorpsacorpsPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29699, false);
        var setting = action.Setting;
        ModifyCorpsacorpsPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CorpsacorpsPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyCorpsacorpsPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CorpsacorpsPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction CorpsacorpsPvP => _CorpsacorpsPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DisplacementPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29700, false);
        var setting = action.Setting;
        ModifyDisplacementPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DisplacementPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyDisplacementPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DisplacementPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction DisplacementPvP => _DisplacementPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BlackShiftPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29702, false);
        var setting = action.Setting;
        ModifyBlackShiftPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BlackShiftPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyBlackShiftPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BlackShiftPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction BlackShiftPvP => _BlackShiftPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WhiteShiftPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29703, false);
        var setting = action.Setting;
        ModifyWhiteShiftPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WhiteShiftPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyWhiteShiftPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WhiteShiftPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction WhiteShiftPvP => _WhiteShiftPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SouthernCrossPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29704, false);
        var setting = action.Setting;
        ModifySouthernCrossPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SouthernCrossPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifySouthernCrossPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SouthernCrossPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction SouthernCrossPvP => _SouthernCrossPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SouthernCrossPvP_29705Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)29705, false);
        var setting = action.Setting;
        ModifySouthernCrossPvP_29705(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SouthernCrossPvP_29705"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifySouthernCrossPvP_29705(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SouthernCrossPvP_29705"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction SouthernCrossPvP_29705 => _SouthernCrossPvP_29705Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedMoulinetDeuxPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)37002, false);
        var setting = action.Setting;
        ModifyEnchantedMoulinetDeuxPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedMoulinetDeuxPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedMoulinetDeuxPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedMoulinetDeuxPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedMoulinetDeuxPvE => _EnchantedMoulinetDeuxPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EnchantedMoulinetTroisPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)37003, false);
        var setting = action.Setting;
        ModifyEnchantedMoulinetTroisPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EnchantedMoulinetTroisPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyEnchantedMoulinetTroisPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EnchantedMoulinetTroisPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction EnchantedMoulinetTroisPvE => _EnchantedMoulinetTroisPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JoltIiiPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)37004, false);
        var setting = action.Setting;
        ModifyJoltIiiPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JoltIiiPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyJoltIiiPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JoltIiiPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction JoltIiiPvE => _JoltIiiPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ViceOfThornsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)37005, false);
        var setting = action.Setting;
        ModifyViceOfThornsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ViceOfThornsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyViceOfThornsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ViceOfThornsPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction ViceOfThornsPvE => _ViceOfThornsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GrandImpactPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)37006, false);
        var setting = action.Setting;
        ModifyGrandImpactPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GrandImpactPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyGrandImpactPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GrandImpactPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction GrandImpactPvE => _GrandImpactPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PrefulgencePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)37007, false);
        var setting = action.Setting;
        ModifyPrefulgencePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PrefulgencePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifyPrefulgencePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PrefulgencePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    public global::RotationSolver.Basic.Actions.IBaseAction PrefulgencePvE => _PrefulgencePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.1")]
    private global::RotationSolver.Basic.Traits.IBaseTrait[]? _AllTraits = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.1")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Traits.IBaseTrait[] AllTraits => _AllTraits ??= [..base.AllTraits];

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.1")]
    static global::Dalamud.Game.ClientState.JobGauge.Types.RDMGauge JobGauge => global::ECommons.DalamudServices.Svc.Gauges.Get<global::Dalamud.Game.ClientState.JobGauge.Types.RDMGauge>();

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SkyshardPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)203, false);
        var setting = action.Setting;
        ModifySkyshardPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SkyshardPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    static partial void ModifySkyshardPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SkyshardPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.1")]
    private global::RotationSolver.Basic.Actions.IBaseAction SkyshardPvE => _SkyshardPvECreator.Value;

    /// <inheritdoc cref="SkyshardPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.1")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak3 => SkyshardPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.1")]
    private global::RotationSolver.Basic.Actions.IBaseAction[]? _AllBaseActions = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.1")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Actions.IBaseAction[] AllBaseActions => _AllBaseActions ??= [JoltPvE, RipostePvE, VerthunderPvE, CorpsacorpsPvE, VeraeroPvE, ScatterPvE, VerfirePvE, VerstonePvE, ZwerchhauPvE, MoulinetPvE, VercurePvE, DisplacementPvE, RedoublementPvE, FlechePvE, AccelerationPvE, ContreSixtePvE, EmboldenPvE, ManaficationPvE, VerraisePvE, JoltIiPvE, VerflarePvE, VerholyPvE, EnchantedRipostePvE, EnchantedZwerchhauPvE, EnchantedRedoublementPvE, EnchantedMoulinetPvE, VerthunderIiPvE, VeraeroIiPvE, ImpactPvE, EngagementPvE, EnchantedReprisePvE, ReprisePvE, ScorchPvE, VerthunderIiiPvE, VeraeroIiiPvE, MagickBarrierPvE, ResolutionPvE, VerstonePvP, VeraeroIiiPvP, VerholyPvP, VerfirePvP, VerthunderIiiPvP, VerflarePvP, EnchantedRipostePvP, EnchantedZwerchhauPvP, EnchantedRedoublementPvP, ResolutionPvP, MagickBarrierPvP, FrazzlePvP, CorpsacorpsPvP, DisplacementPvP, BlackShiftPvP, WhiteShiftPvP, SouthernCrossPvP, EnchantedMoulinetDeuxPvE, EnchantedMoulinetTroisPvE, JoltIiiPvE, ViceOfThornsPvE, GrandImpactPvE, PrefulgencePvE, LimitBreak3, ..base.AllBaseActions];
}