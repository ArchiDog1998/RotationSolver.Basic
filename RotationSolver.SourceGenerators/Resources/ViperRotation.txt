// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations.Basic;
[global::RotationSolver.Basic.Attributes.Jobs(global::ECommons.ExcelServices.Job.VPR)]
/// <summary>
/// <see href="https://na.finalfantasyxiv.com/jobguide/viper"><strong>Viper</strong></see>
/// <br>Number of Actions: 75</br>
/// <br>Number of Action Sets: 11</br>
/// <br>Number of Traits: 15</br>
/// </summary>
public abstract partial class ViperRotation : global::RotationSolver.Basic.Rotations.CustomRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SteelFangsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34606, false);
        var setting = action.Setting;
        ModifySteelFangsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SteelFangsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySteelFangsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SteelFangsPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SteelFangsPvE => _SteelFangsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DreadFangsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34607, false);
        var setting = action.Setting;
        ModifyDreadFangsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DreadFangsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDreadFangsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DreadFangsPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DreadFangsPvE => _DreadFangsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersStingPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34608, false);
        var setting = action.Setting;
        ModifyHuntersStingPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersStingPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHuntersStingPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersStingPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersStingPvE => _HuntersStingPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftskinsStingPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34609, false);
        var setting = action.Setting;
        ModifySwiftskinsStingPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftskinsStingPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySwiftskinsStingPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftskinsStingPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftskinsStingPvE => _SwiftskinsStingPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FlankstingStrikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34610, false);
        var setting = action.Setting;
        ModifyFlankstingStrikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FlankstingStrikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFlankstingStrikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FlankstingStrikePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FlankstingStrikePvE => _FlankstingStrikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FlanksbaneFangPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34611, false);
        var setting = action.Setting;
        ModifyFlanksbaneFangPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FlanksbaneFangPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFlanksbaneFangPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FlanksbaneFangPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FlanksbaneFangPvE => _FlanksbaneFangPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HindstingStrikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34612, false);
        var setting = action.Setting;
        ModifyHindstingStrikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HindstingStrikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHindstingStrikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HindstingStrikePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HindstingStrikePvE => _HindstingStrikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HindsbaneFangPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34613, false);
        var setting = action.Setting;
        ModifyHindsbaneFangPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HindsbaneFangPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHindsbaneFangPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HindsbaneFangPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HindsbaneFangPvE => _HindsbaneFangPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SteelMawPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34614, false);
        var setting = action.Setting;
        ModifySteelMawPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SteelMawPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySteelMawPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SteelMawPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SteelMawPvE => _SteelMawPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DreadMawPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34615, false);
        var setting = action.Setting;
        ModifyDreadMawPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DreadMawPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDreadMawPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DreadMawPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DreadMawPvE => _DreadMawPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersBitePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34616, false);
        var setting = action.Setting;
        ModifyHuntersBitePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersBitePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHuntersBitePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersBitePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersBitePvE => _HuntersBitePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftskinsBitePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34617, false);
        var setting = action.Setting;
        ModifySwiftskinsBitePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftskinsBitePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySwiftskinsBitePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftskinsBitePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftskinsBitePvE => _SwiftskinsBitePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JaggedMawPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34618, false);
        var setting = action.Setting;
        ModifyJaggedMawPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JaggedMawPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJaggedMawPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JaggedMawPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JaggedMawPvE => _JaggedMawPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BloodiedMawPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34619, false);
        var setting = action.Setting;
        ModifyBloodiedMawPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BloodiedMawPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBloodiedMawPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BloodiedMawPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BloodiedMawPvE => _BloodiedMawPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DreadwinderPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34620, false);
        var setting = action.Setting;
        ModifyDreadwinderPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DreadwinderPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDreadwinderPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DreadwinderPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DreadwinderPvE => _DreadwinderPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersCoilPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34621, false);
        var setting = action.Setting;
        ModifyHuntersCoilPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersCoilPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHuntersCoilPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersCoilPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersCoilPvE => _HuntersCoilPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftskinsCoilPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34622, false);
        var setting = action.Setting;
        ModifySwiftskinsCoilPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftskinsCoilPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySwiftskinsCoilPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftskinsCoilPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftskinsCoilPvE => _SwiftskinsCoilPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PitOfDreadPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34623, false);
        var setting = action.Setting;
        ModifyPitOfDreadPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PitOfDreadPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyPitOfDreadPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PitOfDreadPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction PitOfDreadPvE => _PitOfDreadPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersDenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34624, false);
        var setting = action.Setting;
        ModifyHuntersDenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersDenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHuntersDenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersDenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersDenPvE => _HuntersDenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftskinsDenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34625, false);
        var setting = action.Setting;
        ModifySwiftskinsDenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftskinsDenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySwiftskinsDenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftskinsDenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftskinsDenPvE => _SwiftskinsDenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReawakenPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34626, false);
        var setting = action.Setting;
        ModifyReawakenPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReawakenPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyReawakenPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReawakenPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReawakenPvE => _ReawakenPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FirstGenerationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34627, false);
        var setting = action.Setting;
        ModifyFirstGenerationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FirstGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFirstGenerationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FirstGenerationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FirstGenerationPvE => _FirstGenerationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SecondGenerationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34628, false);
        var setting = action.Setting;
        ModifySecondGenerationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SecondGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySecondGenerationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SecondGenerationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SecondGenerationPvE => _SecondGenerationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThirdGenerationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34629, false);
        var setting = action.Setting;
        ModifyThirdGenerationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThirdGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyThirdGenerationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThirdGenerationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThirdGenerationPvE => _ThirdGenerationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FourthGenerationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34630, false);
        var setting = action.Setting;
        ModifyFourthGenerationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FourthGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFourthGenerationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FourthGenerationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FourthGenerationPvE => _FourthGenerationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OuroborosPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34631, false);
        var setting = action.Setting;
        ModifyOuroborosPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OuroborosPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyOuroborosPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OuroborosPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction OuroborosPvE => _OuroborosPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WrithingSnapPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34632, false);
        var setting = action.Setting;
        ModifyWrithingSnapPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WrithingSnapPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyWrithingSnapPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WrithingSnapPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction WrithingSnapPvE => _WrithingSnapPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UncoiledFuryPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34633, false);
        var setting = action.Setting;
        ModifyUncoiledFuryPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UncoiledFuryPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyUncoiledFuryPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UncoiledFuryPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction UncoiledFuryPvE => _UncoiledFuryPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeathRattlePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34634, false);
        var setting = action.Setting;
        ModifyDeathRattlePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeathRattlePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDeathRattlePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeathRattlePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DeathRattlePvE => _DeathRattlePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LastLashPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34635, false);
        var setting = action.Setting;
        ModifyLastLashPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LastLashPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyLastLashPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LastLashPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction LastLashPvE => _LastLashPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinfangBitePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34636, false);
        var setting = action.Setting;
        ModifyTwinfangBitePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinfangBitePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinfangBitePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinfangBitePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinfangBitePvE => _TwinfangBitePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinbloodBitePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34637, false);
        var setting = action.Setting;
        ModifyTwinbloodBitePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinbloodBitePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinbloodBitePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinbloodBitePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinbloodBitePvE => _TwinbloodBitePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinfangThreshPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34638, false);
        var setting = action.Setting;
        ModifyTwinfangThreshPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinfangThreshPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinfangThreshPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinfangThreshPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinfangThreshPvE => _TwinfangThreshPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinbloodThreshPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34639, false);
        var setting = action.Setting;
        ModifyTwinbloodThreshPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinbloodThreshPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinbloodThreshPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinbloodThreshPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinbloodThreshPvE => _TwinbloodThreshPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FirstLegacyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34640, false);
        var setting = action.Setting;
        ModifyFirstLegacyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FirstLegacyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFirstLegacyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FirstLegacyPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FirstLegacyPvE => _FirstLegacyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SecondLegacyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34641, false);
        var setting = action.Setting;
        ModifySecondLegacyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SecondLegacyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySecondLegacyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SecondLegacyPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SecondLegacyPvE => _SecondLegacyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThirdLegacyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34642, false);
        var setting = action.Setting;
        ModifyThirdLegacyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThirdLegacyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyThirdLegacyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThirdLegacyPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThirdLegacyPvE => _ThirdLegacyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FourthLegacyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34643, false);
        var setting = action.Setting;
        ModifyFourthLegacyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FourthLegacyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFourthLegacyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FourthLegacyPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FourthLegacyPvE => _FourthLegacyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UncoiledTwinfangPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34644, false);
        var setting = action.Setting;
        ModifyUncoiledTwinfangPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UncoiledTwinfangPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyUncoiledTwinfangPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UncoiledTwinfangPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction UncoiledTwinfangPvE => _UncoiledTwinfangPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UncoiledTwinbloodPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34645, false);
        var setting = action.Setting;
        ModifyUncoiledTwinbloodPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UncoiledTwinbloodPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyUncoiledTwinbloodPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UncoiledTwinbloodPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction UncoiledTwinbloodPvE => _UncoiledTwinbloodPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SlitherPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34646, false);
        var setting = action.Setting;
        ModifySlitherPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SlitherPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySlitherPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SlitherPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SlitherPvE => _SlitherPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SerpentsIrePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34647, false);
        var setting = action.Setting;
        ModifySerpentsIrePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SerpentsIrePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySerpentsIrePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SerpentsIrePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SerpentsIrePvE => _SerpentsIrePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SerpentsTailPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)35920, false);
        var setting = action.Setting;
        ModifySerpentsTailPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SerpentsTailPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySerpentsTailPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SerpentsTailPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SerpentsTailPvE => _SerpentsTailPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinfangPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)35921, false);
        var setting = action.Setting;
        ModifyTwinfangPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinfangPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinfangPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinfangPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinfangPvE => _TwinfangPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinbloodPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)35922, false);
        var setting = action.Setting;
        ModifyTwinbloodPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinbloodPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinbloodPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinbloodPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinbloodPvE => _TwinbloodPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SteelFangsPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39157, false);
        var setting = action.Setting;
        ModifySteelFangsPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SteelFangsPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySteelFangsPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SteelFangsPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SteelFangsPvP => _SteelFangsPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _PiercingFangsPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39158, false);
        var setting = action.Setting;
        ModifyPiercingFangsPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="PiercingFangsPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyPiercingFangsPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.PiercingFangsPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction PiercingFangsPvP => _PiercingFangsPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersStingPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39159, false);
        var setting = action.Setting;
        ModifyHuntersStingPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersStingPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHuntersStingPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersStingPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersStingPvP => _HuntersStingPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftskinsStingPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39160, false);
        var setting = action.Setting;
        ModifySwiftskinsStingPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftskinsStingPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySwiftskinsStingPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftskinsStingPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftskinsStingPvP => _SwiftskinsStingPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BarbarousBitePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39161, false);
        var setting = action.Setting;
        ModifyBarbarousBitePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BarbarousBitePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBarbarousBitePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BarbarousBitePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BarbarousBitePvP => _BarbarousBitePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RavenousBitePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39163, false);
        var setting = action.Setting;
        ModifyRavenousBitePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RavenousBitePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyRavenousBitePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RavenousBitePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction RavenousBitePvP => _RavenousBitePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HuntersSnapPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39166, false);
        var setting = action.Setting;
        ModifyHuntersSnapPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HuntersSnapPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHuntersSnapPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HuntersSnapPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HuntersSnapPvP => _HuntersSnapPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SwiftskinsCoilPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39167, false);
        var setting = action.Setting;
        ModifySwiftskinsCoilPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SwiftskinsCoilPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySwiftskinsCoilPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SwiftskinsCoilPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SwiftskinsCoilPvP => _SwiftskinsCoilPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UncoiledFuryPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39168, false);
        var setting = action.Setting;
        ModifyUncoiledFuryPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UncoiledFuryPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyUncoiledFuryPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UncoiledFuryPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction UncoiledFuryPvP => _UncoiledFuryPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FirstGenerationPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39169, false);
        var setting = action.Setting;
        ModifyFirstGenerationPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FirstGenerationPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFirstGenerationPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FirstGenerationPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FirstGenerationPvP => _FirstGenerationPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SecondGenerationPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39170, false);
        var setting = action.Setting;
        ModifySecondGenerationPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SecondGenerationPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySecondGenerationPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SecondGenerationPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SecondGenerationPvP => _SecondGenerationPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThirdGenerationPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39171, false);
        var setting = action.Setting;
        ModifyThirdGenerationPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThirdGenerationPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyThirdGenerationPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThirdGenerationPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThirdGenerationPvP => _ThirdGenerationPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FourthGenerationPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39172, false);
        var setting = action.Setting;
        ModifyFourthGenerationPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FourthGenerationPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFourthGenerationPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FourthGenerationPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FourthGenerationPvP => _FourthGenerationPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _OuroborosPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39173, false);
        var setting = action.Setting;
        ModifyOuroborosPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="OuroborosPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyOuroborosPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.OuroborosPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction OuroborosPvP => _OuroborosPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DeathRattlePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39174, false);
        var setting = action.Setting;
        ModifyDeathRattlePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DeathRattlePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDeathRattlePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DeathRattlePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DeathRattlePvP => _DeathRattlePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinfangBitePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39175, false);
        var setting = action.Setting;
        ModifyTwinfangBitePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinfangBitePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinfangBitePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinfangBitePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinfangBitePvP => _TwinfangBitePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TwinbloodBitePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39176, false);
        var setting = action.Setting;
        ModifyTwinbloodBitePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TwinbloodBitePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTwinbloodBitePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TwinbloodBitePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TwinbloodBitePvP => _TwinbloodBitePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _UncoiledTwinfangPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39177, false);
        var setting = action.Setting;
        ModifyUncoiledTwinfangPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="UncoiledTwinfangPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyUncoiledTwinfangPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.UncoiledTwinfangPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction UncoiledTwinfangPvP => _UncoiledTwinfangPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FirstLegacyPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39179, false);
        var setting = action.Setting;
        ModifyFirstLegacyPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FirstLegacyPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFirstLegacyPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FirstLegacyPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FirstLegacyPvP => _FirstLegacyPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SecondLegacyPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39180, false);
        var setting = action.Setting;
        ModifySecondLegacyPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SecondLegacyPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySecondLegacyPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SecondLegacyPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SecondLegacyPvP => _SecondLegacyPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ThirdLegacyPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39181, false);
        var setting = action.Setting;
        ModifyThirdLegacyPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ThirdLegacyPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyThirdLegacyPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ThirdLegacyPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ThirdLegacyPvP => _ThirdLegacyPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FourthLegacyPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39182, false);
        var setting = action.Setting;
        ModifyFourthLegacyPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FourthLegacyPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFourthLegacyPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FourthLegacyPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FourthLegacyPvP => _FourthLegacyPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SerpentsTailPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39183, false);
        var setting = action.Setting;
        ModifySerpentsTailPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SerpentsTailPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySerpentsTailPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SerpentsTailPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SerpentsTailPvP => _SerpentsTailPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SlitherPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39184, false);
        var setting = action.Setting;
        ModifySlitherPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SlitherPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySlitherPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SlitherPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SlitherPvP => _SlitherPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SnakeScalesPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39185, false);
        var setting = action.Setting;
        ModifySnakeScalesPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SnakeScalesPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySnakeScalesPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SnakeScalesPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SnakeScalesPvP => _SnakeScalesPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BacklashPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39186, false);
        var setting = action.Setting;
        ModifyBacklashPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BacklashPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBacklashPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BacklashPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BacklashPvP => _BacklashPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BacklashPvP_39187Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39187, false);
        var setting = action.Setting;
        ModifyBacklashPvP_39187(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BacklashPvP_39187"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBacklashPvP_39187(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BacklashPvP_39187"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BacklashPvP_39187 => _BacklashPvP_39187Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FuriousBacklashPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39188, false);
        var setting = action.Setting;
        ModifyFuriousBacklashPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FuriousBacklashPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFuriousBacklashPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FuriousBacklashPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FuriousBacklashPvP => _FuriousBacklashPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RattlingCoilPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39189, false);
        var setting = action.Setting;
        ModifyRattlingCoilPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RattlingCoilPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyRattlingCoilPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RattlingCoilPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction RattlingCoilPvP => _RattlingCoilPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WorldswallowerPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)39190, false);
        var setting = action.Setting;
        ModifyWorldswallowerPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WorldswallowerPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyWorldswallowerPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WorldswallowerPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction WorldswallowerPvP => _WorldswallowerPvPCreator.Value;
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50524"><strong>Viper's Fangs</strong></see> (VPR) [524]
/// <para>Allows the execution of Death Rattle.</para>
/// <para>Can only be executed after successfully completing a combo with Flanksting Strike, Flanksbane Fang, Hindsting Strike, or Hindsbane Fang.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait VipersFangsTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(524U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50525"><strong>Viper's Maw</strong></see> (VPR) [525]
/// <para>Allows the execution of Last Lash.</para>
/// <para>Can only be executed after successfully completing a combo with Jagged Maw or Bloodied Maw.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait VipersMawTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(525U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50526"><strong>Viper's Bite</strong></see> (VPR) [526]
/// <para>Allows the execution of Twinfang Bite and Twinblood Bite.</para>
/// <para>Can only be executed after successfully landing Hunter's Coil or Swiftskin's Coil.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait VipersBiteTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(526U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50527"><strong>Viper's Thresh</strong></see> (VPR) [527]
/// <para>Allows the execution of Twinfang Thresh and Twinblood Thresh.</para>
/// <para>Can only be executed after successfully landing Hunter's Den or Swiftskin's Den.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait VipersThreshTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(527U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50528"><strong>Viper's Rattle</strong></see> (VPR) [528]
/// <para>Grants 1 stack of Rattling Coil upon successfully landing Dreadwinder or Pit of Dread.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait VipersRattleTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(528U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50529"><strong>Enhanced Slither</strong></see> (VPR) [529]
/// <para>Allows a third charge of Slither. </para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedSlitherTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(529U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50530"><strong>Enhanced Viper's Rattle</strong></see> (VPR) [530]
/// <para>Allows the stacking of a third Rattling Coil.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedVipersRattleTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(530U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50531"><strong>Serpent's Lineage</strong></see> (VPR) [531]
/// <para>Allows for Serpent Offerings Gauge accumulation upon the landing of certain actions.</para>
/// <para>Furthermore, adds an additional effect to Serpent's Ire that grants Ready to Reawaken.</para>
/// <para>Duration: 30s</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait SerpentsLineageTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(531U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50532"><strong>Uncoiled Fangs</strong></see> (VPR) [532]
/// <para>Allows the execution of Uncoiled Twinfang or Uncoiled Twinblood after successfully landing Uncoiled Fury.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait UncoiledFangsTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(532U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50533"><strong>Enhanced Serpent's Lineage</strong></see> (VPR) [533]
/// <para>Allows the stacking of a fifth Anguine Tribute in the Serpent Offerings Gauge.</para>
/// <para>Furthermore, allows the execution of Ouroboros while under the effect of Reawakened.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedSerpentsLineageTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(533U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50534"><strong>Serpent's Legacy</strong></see> (VPR) [534]
/// <para>Allows the execution of First Legacy after First Generation, Second Legacy after Second Generation, Third Legacy after Third Generation, and Fourth Legacy after Fourth Generation.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait SerpentsLegacyTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(534U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50641"><strong>Enhanced Feint</strong></see> (PGL LNC ROG MNK DRG NIN SAM RPR VPR) [641]
/// <para>Extends the duration of Feint to 15 seconds.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedFeintTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(641U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50642"><strong>Enhanced Second Wind</strong></see> (PGL LNC ARC ROG MNK DRG BRD NIN MCH SAM DNC RPR VPR) [642]
/// <para>Increases the healing potency of Second Wind to 800.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedSecondWindTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(642U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50674"><strong>Melee Mastery</strong></see> (VPR) [674]
/// <para>Increases the potency of Steel Fangs to 200, Dread Fangs to 140, Hunter's Sting to 260, and Swiftskin's Sting to 260.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait MeleeMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(674U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50675"><strong>Melee Mastery II</strong></see> (VPR) [675]
/// <para>Increases the potency of Flanksting Strike to 300, Flanksbane Fang to 300, Hindsting Strike to 300, and Hindsbane Fang to 300.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait MeleeMasteryIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(675U);

    /// <summary>
/// <seealso cref="SteelMawPvE"/> -> <seealso cref="HuntersBitePvE"/> -> <seealso cref="JaggedMawPvE"/> -> <seealso cref="FirstGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SteelMawPvESet { get; }

    /// <summary>
/// <seealso cref="DreadMawPvE"/> -> <seealso cref="SwiftskinsBitePvE"/> -> <seealso cref="BloodiedMawPvE"/> -> <seealso cref="SecondGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet DreadMawPvESet { get; }

    /// <summary>
/// <seealso cref="HuntersCoilPvE"/> -> <seealso cref="ThirdGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet HuntersCoilPvESet { get; }

    /// <summary>
/// <seealso cref="SwiftskinsCoilPvE"/> -> <seealso cref="FourthGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SwiftskinsCoilPvESet { get; }

    /// <summary>
/// <seealso cref="HuntersDenPvE"/> -> <seealso cref="ThirdGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet HuntersDenPvESet { get; }

    /// <summary>
/// <seealso cref="SwiftskinsDenPvE"/> -> <seealso cref="FourthGenerationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SwiftskinsDenPvESet { get; }

    /// <summary>
/// <seealso cref="ReawakenPvE"/> -> <seealso cref="OuroborosPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet ReawakenPvESet { get; }

    /// <summary>
/// <seealso cref="TwinfangPvE"/> -> <seealso cref="TwinfangBitePvE"/> -> <seealso cref="TwinfangThreshPvE"/> -> <seealso cref="UncoiledTwinfangPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet TwinfangPvESet { get; }

    /// <summary>
/// <seealso cref="TwinbloodPvE"/> -> <seealso cref="TwinbloodBitePvE"/> -> <seealso cref="TwinbloodThreshPvE"/> -> <seealso cref="UncoiledTwinbloodPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet TwinbloodPvESet { get; }

    /// <summary>
/// <seealso cref="HuntersSnapPvP"/> -> <seealso cref="SwiftskinsCoilPvP"/> -> <seealso cref="OuroborosPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet HuntersSnapPvPSet { get; }

    /// <summary>
/// <seealso cref="SnakeScalesPvP"/> -> <seealso cref="BacklashPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SnakeScalesPvPSet { get; }

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    private global::RotationSolver.Basic.Traits.IBaseTrait[]? _AllTraits = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Traits.IBaseTrait[] AllTraits => _AllTraits ??= [VipersFangsTrait, VipersMawTrait, VipersBiteTrait, VipersThreshTrait, VipersRattleTrait, EnhancedSlitherTrait, EnhancedVipersRattleTrait, SerpentsLineageTrait, UncoiledFangsTrait, EnhancedSerpentsLineageTrait, SerpentsLegacyTrait, EnhancedFeintTrait, EnhancedSecondWindTrait, MeleeMasteryTrait, MeleeMasteryIiTrait, ..base.AllTraits];

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BraverPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)200, false);
        var setting = action.Setting;
        ModifyBraverPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BraverPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBraverPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BraverPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction BraverPvE => _BraverPvECreator.Value;

    /// <inheritdoc cref="BraverPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak1 => BraverPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BladedancePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)201, false);
        var setting = action.Setting;
        ModifyBladedancePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BladedancePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBladedancePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BladedancePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction BladedancePvE => _BladedancePvECreator.Value;

    /// <inheritdoc cref="BladedancePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak2 => BladedancePvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WorldswallowerPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction((global::RotationSolver.Basic.Data.ActionID)34866, false);
        var setting = action.Setting;
        ModifyWorldswallowerPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WorldswallowerPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyWorldswallowerPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WorldswallowerPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction WorldswallowerPvE => _WorldswallowerPvECreator.Value;

    /// <inheritdoc cref="WorldswallowerPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak3 => WorldswallowerPvE;

    /// <inheritdoc/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    protected ViperRotation()
    {
        SteelMawPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [FirstGenerationPvE, JaggedMawPvE, HuntersBitePvE, SteelMawPvE]);
        DreadMawPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [SecondGenerationPvE, BloodiedMawPvE, SwiftskinsBitePvE, DreadMawPvE]);
        HuntersCoilPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [ThirdGenerationPvE, HuntersCoilPvE]);
        SwiftskinsCoilPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [FourthGenerationPvE, SwiftskinsCoilPvE]);
        HuntersDenPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [ThirdGenerationPvE, HuntersDenPvE]);
        SwiftskinsDenPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [FourthGenerationPvE, SwiftskinsDenPvE]);
        ReawakenPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [OuroborosPvE, ReawakenPvE]);
        TwinfangPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [UncoiledTwinfangPvE, TwinfangThreshPvE, TwinfangBitePvE, TwinfangPvE]);
        TwinbloodPvESet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [UncoiledTwinbloodPvE, TwinbloodThreshPvE, TwinbloodBitePvE, TwinbloodPvE]);
        HuntersSnapPvPSet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [OuroborosPvP, SwiftskinsCoilPvP, HuntersSnapPvP]);
        SnakeScalesPvPSet = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [BacklashPvP, SnakeScalesPvP]);
    }

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction[]? _AllBaseActions = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Actions.IBaseAction[] AllBaseActions => _AllBaseActions ??= [SteelFangsPvE, DreadFangsPvE, HuntersStingPvE, SwiftskinsStingPvE, FlankstingStrikePvE, FlanksbaneFangPvE, HindstingStrikePvE, HindsbaneFangPvE, SteelMawPvE, DreadMawPvE, HuntersBitePvE, SwiftskinsBitePvE, JaggedMawPvE, BloodiedMawPvE, DreadwinderPvE, HuntersCoilPvE, SwiftskinsCoilPvE, PitOfDreadPvE, HuntersDenPvE, SwiftskinsDenPvE, ReawakenPvE, FirstGenerationPvE, SecondGenerationPvE, ThirdGenerationPvE, FourthGenerationPvE, OuroborosPvE, WrithingSnapPvE, UncoiledFuryPvE, DeathRattlePvE, LastLashPvE, TwinfangBitePvE, TwinbloodBitePvE, TwinfangThreshPvE, TwinbloodThreshPvE, FirstLegacyPvE, SecondLegacyPvE, ThirdLegacyPvE, FourthLegacyPvE, UncoiledTwinfangPvE, UncoiledTwinbloodPvE, SlitherPvE, SerpentsIrePvE, SerpentsTailPvE, TwinfangPvE, TwinbloodPvE, SteelFangsPvP, PiercingFangsPvP, HuntersStingPvP, SwiftskinsStingPvP, BarbarousBitePvP, RavenousBitePvP, HuntersSnapPvP, SwiftskinsCoilPvP, UncoiledFuryPvP, FirstGenerationPvP, SecondGenerationPvP, ThirdGenerationPvP, FourthGenerationPvP, OuroborosPvP, DeathRattlePvP, TwinfangBitePvP, TwinbloodBitePvP, UncoiledTwinfangPvP, FirstLegacyPvP, SecondLegacyPvP, ThirdLegacyPvP, FourthLegacyPvP, SerpentsTailPvP, SlitherPvP, SnakeScalesPvP, BacklashPvP, FuriousBacklashPvP, RattlingCoilPvP, WorldswallowerPvP, LimitBreak1, LimitBreak2, LimitBreak3, ..base.AllBaseActions];
}