// <auto-generated/>
#pragma warning disable
#nullable enable
namespace RotationSolver.Basic.Rotations.Basic;
[global::RotationSolver.Basic.Attributes.Jobs(global::ECommons.ExcelServices.Job.GNB)]
/// <summary>
/// <see href="https://na.finalfantasyxiv.com/jobguide/gunbreaker"><strong>Gunbreaker</strong></see>
/// <br>Number of Actions: 72</br>
/// <br>Number of Replace Actions: 8</br>
/// <br>Number of Action Combos: 11</br>
/// <br>Number of Traits: 16</br>
/// </summary>
public abstract partial class GunbreakerRotation : global::RotationSolver.Basic.Rotations.CustomRotation
{
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KeenEdgePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KeenEdgePvE, false);
        var setting = action.Setting;
        ModifyKeenEdgePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KeenEdgePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyKeenEdgePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KeenEdgePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction KeenEdgePvE => _KeenEdgePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NoMercyPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NoMercyPvE, false);
        var setting = action.Setting;
        ModifyNoMercyPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NoMercyPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyNoMercyPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NoMercyPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction NoMercyPvE => _NoMercyPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BrutalShellPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BrutalShellPvE, false);
        var setting = action.Setting;
        ModifyBrutalShellPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BrutalShellPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBrutalShellPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BrutalShellPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BrutalShellPvE => _BrutalShellPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _CamouflagePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.CamouflagePvE, false);
        var setting = action.Setting;
        ModifyCamouflagePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="CamouflagePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyCamouflagePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.CamouflagePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction CamouflagePvE => _CamouflagePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DemonSlicePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DemonSlicePvE, false);
        var setting = action.Setting;
        ModifyDemonSlicePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DemonSlicePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDemonSlicePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DemonSlicePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DemonSlicePvE => _DemonSlicePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RoyalGuardPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RoyalGuardPvE, false);
        var setting = action.Setting;
        ModifyRoyalGuardPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RoyalGuardPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyRoyalGuardPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RoyalGuardPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction RoyalGuardPvE => _RoyalGuardPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LightningShotPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LightningShotPvE, false);
        var setting = action.Setting;
        ModifyLightningShotPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LightningShotPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyLightningShotPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LightningShotPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction LightningShotPvE => _LightningShotPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DangerZonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DangerZonePvE, false);
        var setting = action.Setting;
        ModifyDangerZonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DangerZonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDangerZonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DangerZonePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DangerZonePvE => _DangerZonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SolidBarrelPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvE, false);
        var setting = action.Setting;
        ModifySolidBarrelPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SolidBarrelPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySolidBarrelPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SolidBarrelPvE => _SolidBarrelPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GnashingFangPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GnashingFangPvE, false);
        var setting = action.Setting;
        ModifyGnashingFangPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GnashingFangPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyGnashingFangPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GnashingFangPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction GnashingFangPvE => _GnashingFangPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SavageClawPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SavageClawPvE, false);
        var setting = action.Setting;
        ModifySavageClawPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SavageClawPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySavageClawPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SavageClawPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SavageClawPvE => _SavageClawPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NebulaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NebulaPvE, false);
        var setting = action.Setting;
        ModifyNebulaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NebulaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyNebulaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NebulaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction NebulaPvE => _NebulaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DemonSlaughterPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DemonSlaughterPvE, false);
        var setting = action.Setting;
        ModifyDemonSlaughterPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DemonSlaughterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDemonSlaughterPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DemonSlaughterPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DemonSlaughterPvE => _DemonSlaughterPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WickedTalonPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WickedTalonPvE, false);
        var setting = action.Setting;
        ModifyWickedTalonPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WickedTalonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyWickedTalonPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WickedTalonPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction WickedTalonPvE => _WickedTalonPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AuroraPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AuroraPvE, false);
        var setting = action.Setting;
        ModifyAuroraPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AuroraPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAuroraPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AuroraPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AuroraPvE => _AuroraPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SuperbolidePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SuperbolidePvE, false);
        var setting = action.Setting;
        ModifySuperbolidePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SuperbolidePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySuperbolidePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SuperbolidePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SuperbolidePvE => _SuperbolidePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SonicBreakPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SonicBreakPvE, false);
        var setting = action.Setting;
        ModifySonicBreakPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SonicBreakPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySonicBreakPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SonicBreakPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SonicBreakPvE => _SonicBreakPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ContinuationPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ContinuationPvE, false);
        var setting = action.Setting;
        ModifyContinuationPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ContinuationPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyContinuationPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ContinuationPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ContinuationPvE => _ContinuationPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JugularRipPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JugularRipPvE, false);
        var setting = action.Setting;
        ModifyJugularRipPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JugularRipPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJugularRipPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JugularRipPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JugularRipPvE => _JugularRipPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AbdomenTearPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvE, false);
        var setting = action.Setting;
        ModifyAbdomenTearPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AbdomenTearPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAbdomenTearPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AbdomenTearPvE => _AbdomenTearPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EyeGougePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EyeGougePvE, false);
        var setting = action.Setting;
        ModifyEyeGougePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EyeGougePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyEyeGougePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EyeGougePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction EyeGougePvE => _EyeGougePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BowShockPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BowShockPvE, false);
        var setting = action.Setting;
        ModifyBowShockPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BowShockPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBowShockPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BowShockPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BowShockPvE => _BowShockPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeartOfLightPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeartOfLightPvE, false);
        var setting = action.Setting;
        ModifyHeartOfLightPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeartOfLightPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHeartOfLightPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeartOfLightPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HeartOfLightPvE => _HeartOfLightPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeartOfStonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeartOfStonePvE, false);
        var setting = action.Setting;
        ModifyHeartOfStonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeartOfStonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHeartOfStonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeartOfStonePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HeartOfStonePvE => _HeartOfStonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BurstStrikePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BurstStrikePvE, false);
        var setting = action.Setting;
        ModifyBurstStrikePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BurstStrikePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBurstStrikePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BurstStrikePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BurstStrikePvE => _BurstStrikePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FatedCirclePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FatedCirclePvE, false);
        var setting = action.Setting;
        ModifyFatedCirclePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FatedCirclePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFatedCirclePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FatedCirclePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FatedCirclePvE => _FatedCirclePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BloodfestPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BloodfestPvE, false);
        var setting = action.Setting;
        ModifyBloodfestPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BloodfestPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBloodfestPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BloodfestPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BloodfestPvE => _BloodfestPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BlastingZonePvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BlastingZonePvE, false);
        var setting = action.Setting;
        ModifyBlastingZonePvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BlastingZonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBlastingZonePvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BlastingZonePvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BlastingZonePvE => _BlastingZonePvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HeartOfCorundumPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HeartOfCorundumPvE, false);
        var setting = action.Setting;
        ModifyHeartOfCorundumPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HeartOfCorundumPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHeartOfCorundumPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HeartOfCorundumPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HeartOfCorundumPvE => _HeartOfCorundumPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HypervelocityPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HypervelocityPvE, false);
        var setting = action.Setting;
        ModifyHypervelocityPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HypervelocityPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHypervelocityPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HypervelocityPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HypervelocityPvE => _HypervelocityPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DoubleDownPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DoubleDownPvE, false);
        var setting = action.Setting;
        ModifyDoubleDownPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DoubleDownPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDoubleDownPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DoubleDownPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DoubleDownPvE => _DoubleDownPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _KeenEdgePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.KeenEdgePvP, false);
        var setting = action.Setting;
        ModifyKeenEdgePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="KeenEdgePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyKeenEdgePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.KeenEdgePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction KeenEdgePvP => _KeenEdgePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BrutalShellPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BrutalShellPvP, false);
        var setting = action.Setting;
        ModifyBrutalShellPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BrutalShellPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBrutalShellPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BrutalShellPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BrutalShellPvP => _BrutalShellPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SolidBarrelPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvP, false);
        var setting = action.Setting;
        ModifySolidBarrelPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SolidBarrelPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySolidBarrelPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SolidBarrelPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SolidBarrelPvP => _SolidBarrelPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BurstStrikePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BurstStrikePvP, false);
        var setting = action.Setting;
        ModifyBurstStrikePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BurstStrikePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBurstStrikePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BurstStrikePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BurstStrikePvP => _BurstStrikePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GnashingFangPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GnashingFangPvP, false);
        var setting = action.Setting;
        ModifyGnashingFangPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GnashingFangPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyGnashingFangPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GnashingFangPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction GnashingFangPvP => _GnashingFangPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _SavageClawPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.SavageClawPvP, false);
        var setting = action.Setting;
        ModifySavageClawPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="SavageClawPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifySavageClawPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.SavageClawPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction SavageClawPvP => _SavageClawPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _WickedTalonPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.WickedTalonPvP, false);
        var setting = action.Setting;
        ModifyWickedTalonPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="WickedTalonPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyWickedTalonPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.WickedTalonPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction WickedTalonPvP => _WickedTalonPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DoubleDownPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DoubleDownPvP, false);
        var setting = action.Setting;
        ModifyDoubleDownPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DoubleDownPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDoubleDownPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DoubleDownPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DoubleDownPvP => _DoubleDownPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ContinuationPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ContinuationPvP, false);
        var setting = action.Setting;
        ModifyContinuationPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ContinuationPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyContinuationPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ContinuationPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ContinuationPvP => _ContinuationPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HypervelocityPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP, false);
        var setting = action.Setting;
        ModifyHypervelocityPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HypervelocityPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHypervelocityPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HypervelocityPvP => _HypervelocityPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JugularRipPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JugularRipPvP, false);
        var setting = action.Setting;
        ModifyJugularRipPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JugularRipPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJugularRipPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JugularRipPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JugularRipPvP => _JugularRipPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AbdomenTearPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP, false);
        var setting = action.Setting;
        ModifyAbdomenTearPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AbdomenTearPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAbdomenTearPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AbdomenTearPvP => _AbdomenTearPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EyeGougePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EyeGougePvP, false);
        var setting = action.Setting;
        ModifyEyeGougePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EyeGougePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyEyeGougePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EyeGougePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction EyeGougePvP => _EyeGougePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HypervelocityPvP_29111Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP_29111, false);
        var setting = action.Setting;
        ModifyHypervelocityPvP_29111(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HypervelocityPvP_29111"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHypervelocityPvP_29111(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP_29111"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HypervelocityPvP_29111 => _HypervelocityPvP_29111Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JugularRipPvP_29112Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JugularRipPvP_29112, false);
        var setting = action.Setting;
        ModifyJugularRipPvP_29112(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JugularRipPvP_29112"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJugularRipPvP_29112(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JugularRipPvP_29112"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JugularRipPvP_29112 => _JugularRipPvP_29112Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AbdomenTearPvP_29113Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP_29113, false);
        var setting = action.Setting;
        ModifyAbdomenTearPvP_29113(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AbdomenTearPvP_29113"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAbdomenTearPvP_29113(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP_29113"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AbdomenTearPvP_29113 => _AbdomenTearPvP_29113Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EyeGougePvP_29114Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EyeGougePvP_29114, false);
        var setting = action.Setting;
        ModifyEyeGougePvP_29114(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EyeGougePvP_29114"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyEyeGougePvP_29114(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EyeGougePvP_29114"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction EyeGougePvP_29114 => _EyeGougePvP_29114Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HypervelocityPvP_29115Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP_29115, false);
        var setting = action.Setting;
        ModifyHypervelocityPvP_29115(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HypervelocityPvP_29115"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHypervelocityPvP_29115(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP_29115"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HypervelocityPvP_29115 => _HypervelocityPvP_29115Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JugularRipPvP_29116Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JugularRipPvP_29116, false);
        var setting = action.Setting;
        ModifyJugularRipPvP_29116(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JugularRipPvP_29116"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJugularRipPvP_29116(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JugularRipPvP_29116"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JugularRipPvP_29116 => _JugularRipPvP_29116Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AbdomenTearPvP_29117Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP_29117, false);
        var setting = action.Setting;
        ModifyAbdomenTearPvP_29117(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AbdomenTearPvP_29117"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAbdomenTearPvP_29117(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP_29117"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AbdomenTearPvP_29117 => _AbdomenTearPvP_29117Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EyeGougePvP_29118Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EyeGougePvP_29118, false);
        var setting = action.Setting;
        ModifyEyeGougePvP_29118(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EyeGougePvP_29118"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyEyeGougePvP_29118(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EyeGougePvP_29118"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction EyeGougePvP_29118 => _EyeGougePvP_29118Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _HypervelocityPvP_29119Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP_29119, false);
        var setting = action.Setting;
        ModifyHypervelocityPvP_29119(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="HypervelocityPvP_29119"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyHypervelocityPvP_29119(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.HypervelocityPvP_29119"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction HypervelocityPvP_29119 => _HypervelocityPvP_29119Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JugularRipPvP_29120Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JugularRipPvP_29120, false);
        var setting = action.Setting;
        ModifyJugularRipPvP_29120(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JugularRipPvP_29120"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJugularRipPvP_29120(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JugularRipPvP_29120"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JugularRipPvP_29120 => _JugularRipPvP_29120Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AbdomenTearPvP_29121Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP_29121, false);
        var setting = action.Setting;
        ModifyAbdomenTearPvP_29121(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AbdomenTearPvP_29121"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAbdomenTearPvP_29121(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AbdomenTearPvP_29121"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AbdomenTearPvP_29121 => _AbdomenTearPvP_29121Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _EyeGougePvP_29122Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.EyeGougePvP_29122, false);
        var setting = action.Setting;
        ModifyEyeGougePvP_29122(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="EyeGougePvP_29122"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyEyeGougePvP_29122(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.EyeGougePvP_29122"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction EyeGougePvP_29122 => _EyeGougePvP_29122Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RoughDividePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RoughDividePvP, false);
        var setting = action.Setting;
        ModifyRoughDividePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RoughDividePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyRoughDividePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RoughDividePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction RoughDividePvP => _RoughDividePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _DrawAndJunctionPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.DrawAndJunctionPvP, false);
        var setting = action.Setting;
        ModifyDrawAndJunctionPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="DrawAndJunctionPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyDrawAndJunctionPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.DrawAndJunctionPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction DrawAndJunctionPvP => _DrawAndJunctionPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _JunctionedCastPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.JunctionedCastPvP, false);
        var setting = action.Setting;
        ModifyJunctionedCastPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="JunctionedCastPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyJunctionedCastPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.JunctionedCastPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction JunctionedCastPvP => _JunctionedCastPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NebulaPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NebulaPvP, false);
        var setting = action.Setting;
        ModifyNebulaPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NebulaPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyNebulaPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NebulaPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction NebulaPvP => _NebulaPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _BlastingZonePvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.BlastingZonePvP, false);
        var setting = action.Setting;
        ModifyBlastingZonePvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="BlastingZonePvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyBlastingZonePvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.BlastingZonePvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction BlastingZonePvP => _BlastingZonePvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _AuroraPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.AuroraPvP, false);
        var setting = action.Setting;
        ModifyAuroraPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="AuroraPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyAuroraPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.AuroraPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction AuroraPvP => _AuroraPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _RelentlessRushPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.RelentlessRushPvP, false);
        var setting = action.Setting;
        ModifyRelentlessRushPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="RelentlessRushPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyRelentlessRushPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.RelentlessRushPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction RelentlessRushPvP => _RelentlessRushPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TerminalTriggerPvPCreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TerminalTriggerPvP, false);
        var setting = action.Setting;
        ModifyTerminalTriggerPvP(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TerminalTriggerPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTerminalTriggerPvP(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TerminalTriggerPvP"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TerminalTriggerPvP => _TerminalTriggerPvPCreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TerminalTriggerPvP_29469Creator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TerminalTriggerPvP_29469, false);
        var setting = action.Setting;
        ModifyTerminalTriggerPvP_29469(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TerminalTriggerPvP_29469"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTerminalTriggerPvP_29469(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TerminalTriggerPvP_29469"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TerminalTriggerPvP_29469 => _TerminalTriggerPvP_29469Creator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReleaseRoyalGuardPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReleaseRoyalGuardPvE, false);
        var setting = action.Setting;
        ModifyReleaseRoyalGuardPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReleaseRoyalGuardPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyReleaseRoyalGuardPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReleaseRoyalGuardPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReleaseRoyalGuardPvE => _ReleaseRoyalGuardPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _TrajectoryPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.TrajectoryPvE, false);
        var setting = action.Setting;
        ModifyTrajectoryPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="TrajectoryPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyTrajectoryPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.TrajectoryPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction TrajectoryPvE => _TrajectoryPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GreatNebulaPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GreatNebulaPvE, false);
        var setting = action.Setting;
        ModifyGreatNebulaPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GreatNebulaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyGreatNebulaPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GreatNebulaPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction GreatNebulaPvE => _GreatNebulaPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _FatedBrandPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.FatedBrandPvE, false);
        var setting = action.Setting;
        ModifyFatedBrandPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="FatedBrandPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyFatedBrandPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.FatedBrandPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction FatedBrandPvE => _FatedBrandPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ReignOfBeastsPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ReignOfBeastsPvE, false);
        var setting = action.Setting;
        ModifyReignOfBeastsPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ReignOfBeastsPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyReignOfBeastsPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ReignOfBeastsPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction ReignOfBeastsPvE => _ReignOfBeastsPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _NobleBloodPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.NobleBloodPvE, false);
        var setting = action.Setting;
        ModifyNobleBloodPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="NobleBloodPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyNobleBloodPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.NobleBloodPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction NobleBloodPvE => _NobleBloodPvECreator.Value;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _LionHeartPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.LionHeartPvE, false);
        var setting = action.Setting;
        ModifyLionHeartPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="LionHeartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyLionHeartPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.LionHeartPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseAction LionHeartPvE => _LionHeartPvECreator.Value;
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50257"><strong>Cartridge Charge</strong></see> (GNB) [257]
/// <para>Stores a Cartridge in your Powder Gauge after successfully completing a combo with Solid Barrel.</para>
/// <para>Maximum Cartridges: 2</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait CartridgeChargeTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(257U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50258"><strong>Enhanced Brutal Shell</strong></see> (GNB) [258]
/// <para>Grants the effect of Brutal Shell after successfully completing a combo with Brutal Shell.</para>
/// <para>Duration: 30s</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedBrutalShellTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(258U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50259"><strong>Danger Zone Mastery</strong></see> (GNB) [259]
/// <para>Upgrades Danger Zone to Blasting Zone.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait DangerZoneMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(259U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50320"><strong>Tank Mastery</strong></see> (GNB) [320]
/// <para>Reduces damage taken by 20%. Furthermore, grants a bonus to maximum HP based on your vitality attribute, and a bonus to damage dealt based on your strength attribute.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait TankMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(320U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50424"><strong>Heart of Stone Mastery</strong></see> (GNB) [424]
/// <para>Upgrades Heart of Stone to Heart of Corundum.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait HeartOfStoneMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(424U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50425"><strong>Enhanced Aurora</strong></see> (GNB) [425]
/// <para>Allows the accumulation of charges for consecutive uses of Aurora.</para>
/// <para>Maximum Charges: 2</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedAuroraTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(425U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50426"><strong>Enhanced Continuation</strong></see> (GNB) [426]
/// <para>Become Ready to Blast after executing Burst Strike.</para>
/// <para>Duration: 10s</para>
/// <para>Continuation changes to Hypervelocity while under the effect of Ready to Blast.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedContinuationTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(426U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50427"><strong>Cartridge Charge II</strong></see> (GNB) [427]
/// <para>Increases Powder Gauge capacity to 3 Cartridges.</para>
/// <para>Executing Bloodfest stores 3 Cartridges.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait CartridgeChargeIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(427U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50507"><strong>Melee Mastery</strong></see> (GNB) [507]
/// <para>Increases the potency of Keen Edge to 200, Brutal Shell to 160, and Solid Barrel to 140.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait MeleeMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(507U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50574"><strong>Nebula Mastery</strong></see> (GNB) [574]
/// <para>Upgrades Nebula to Great Nebula.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait NebulaMasteryTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(574U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50575"><strong>Enhanced Continuation II</strong></see> (GNB) [575]
/// <para>Become Ready to Raze after executing Fated Circle.</para>
/// <para>Duration: 10s</para>
/// <para>Continuation changes to Fated Brand when Ready to Raze.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedContinuationIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(575U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50576"><strong>Enhanced Bloodfest</strong></see> (GNB) [576]
/// <para>Grants the effect of Ready to Reign after executing Bloodfest.</para>
/// <para>Duration: 30s</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedBloodfestTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(576U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50639"><strong>Enhanced Rampart</strong></see> (GLA MRD PLD WAR DRK GNB) [639]
/// <para>Adds an additional effect to Rampart that increases HP recovery via healing actions on self by 15%.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedRampartTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(639U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50640"><strong>Enhanced Reprisal</strong></see> (GLA MRD PLD WAR DRK GNB) [640]
/// <para>Extends the duration of Reprisal to 15 seconds.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedReprisalTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(640U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50666"><strong>Enhanced No Mercy</strong></see> (GNB) [666]
/// <para>Become Ready to Break after executing No Mercy.</para>
/// <para>Duration: 30s</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait EnhancedNoMercyTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(666U);
    /// <summary>
/// <see href="https://garlandtools.org/db/#action/50667"><strong>Melee Mastery II</strong></see> (GNB) [667]
/// <para>Increases the potency of Keen Edge to 300, Brutal Shell to 240, Solid Barrel to 240, Burst Strike to 460, Gnashing Fang to 500, Savage Claw to 560, Wicked Talon to 620, Jugular Rip to 240, Abdomen Tear to 280, Eye Gouge to 320, Blasting Zone to 800, and Hypervelocity to 220.</para>
/// </summary>
    public static global::RotationSolver.Basic.Traits.IBaseTrait MeleeMasteryIiTrait { get; } = new global::RotationSolver.Basic.Traits.BaseTrait(667U);

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="RoyalGuardPvE"/> -> <seealso cref="ReleaseRoyalGuardPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet RoyalGuardPvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="DangerZonePvE"/> -> <seealso cref="BlastingZonePvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet DangerZonePvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="HeartOfStonePvE"/> -> <seealso cref="HeartOfCorundumPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet HeartOfStonePvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="GnashingFangPvE"/> -> <seealso cref="SavageClawPvE"/> -> <seealso cref="WickedTalonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet GnashingFangPvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="NebulaPvE"/> -> <seealso cref="GreatNebulaPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet NebulaPvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="BloodfestPvE"/> -> <seealso cref="ReignOfBeastsPvE"/> -> <seealso cref="NobleBloodPvE"/> -> <seealso cref="LionHeartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet BloodfestPvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="ReignOfBeastsPvE"/> -> <seealso cref="NobleBloodPvE"/> -> <seealso cref="LionHeartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet ReignOfBeastsPvEReplace { get; }

    /// <summary>
/// <see cref="Lumina.Excel.GeneratedSheets.ReplaceAction"/>
/// <seealso cref="NoMercyPvE"/> -> <seealso cref="SonicBreakPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet NoMercyPvEReplace { get; }

    /// <summary>
/// <seealso cref="KeenEdgePvE"/> -> <seealso cref="BrutalShellPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet BrutalShellPvECombo { get; }

    /// <summary>
/// <seealso cref="KeenEdgePvE"/> -> <seealso cref="BrutalShellPvE"/> -> <seealso cref="SolidBarrelPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SolidBarrelPvECombo { get; }

    /// <summary>
/// <seealso cref="GnashingFangPvE"/> -> <seealso cref="SavageClawPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SavageClawPvECombo { get; }

    /// <summary>
/// <seealso cref="DemonSlicePvE"/> -> <seealso cref="DemonSlaughterPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet DemonSlaughterPvECombo { get; }

    /// <summary>
/// <seealso cref="GnashingFangPvE"/> -> <seealso cref="SavageClawPvE"/> -> <seealso cref="WickedTalonPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet WickedTalonPvECombo { get; }

    /// <summary>
/// <seealso cref="KeenEdgePvP"/> -> <seealso cref="BrutalShellPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet BrutalShellPvPCombo { get; }

    /// <summary>
/// <seealso cref="KeenEdgePvP"/> -> <seealso cref="BrutalShellPvP"/> -> <seealso cref="SolidBarrelPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SolidBarrelPvPCombo { get; }

    /// <summary>
/// <seealso cref="GnashingFangPvP"/> -> <seealso cref="SavageClawPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet SavageClawPvPCombo { get; }

    /// <summary>
/// <seealso cref="GnashingFangPvP"/> -> <seealso cref="SavageClawPvP"/> -> <seealso cref="WickedTalonPvP"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet WickedTalonPvPCombo { get; }

    /// <summary>
/// <seealso cref="ReignOfBeastsPvE"/> -> <seealso cref="NobleBloodPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet NobleBloodPvECombo { get; }

    /// <summary>
/// <seealso cref="ReignOfBeastsPvE"/> -> <seealso cref="NobleBloodPvE"/> -> <seealso cref="LionHeartPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public global::RotationSolver.Basic.Actions.IBaseActionSet LionHeartPvECombo { get; }

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    private global::RotationSolver.Basic.Traits.IBaseTrait[]? _AllTraits = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Traits.IBaseTrait[] AllTraits => _AllTraits ??= [CartridgeChargeTrait, EnhancedBrutalShellTrait, DangerZoneMasteryTrait, TankMasteryTrait, HeartOfStoneMasteryTrait, EnhancedAuroraTrait, EnhancedContinuationTrait, CartridgeChargeIiTrait, MeleeMasteryTrait, NebulaMasteryTrait, EnhancedContinuationIiTrait, EnhancedBloodfestTrait, EnhancedRampartTrait, EnhancedReprisalTrait, EnhancedNoMercyTrait, MeleeMasteryIiTrait, ..base.AllTraits];

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    static global::Dalamud.Game.ClientState.JobGauge.Types.GNBGauge JobGauge => global::ECommons.DalamudServices.Svc.Gauges.Get<global::Dalamud.Game.ClientState.JobGauge.Types.GNBGauge>();

    /// <inheritdoc cref="GNBGauge.Ammo"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public static System.Byte Ammo => JobGauge.Ammo;

    /// <inheritdoc cref="GNBGauge.MaxTimerDuration"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public static float MaxTimerDuration => JobGauge.MaxTimerDuration / 1000f - DataCenter.WeaponRemain;

    /// <inheritdoc cref="GNBGauge.AmmoComboStep"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    public static System.Byte AmmoComboStep => JobGauge.AmmoComboStep;

    public override /// <inheritdoc/>
    void DisplayStatus()
    {
        ImGui.Text("Ammo: " + Ammo.ToString());
        ImGui.Text("MaxTimerDuration: " + MaxTimerDuration.ToString());
        ImGui.Text("AmmoComboStep: " + AmmoComboStep.ToString());
        base.DisplayStatus();
    }

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _ShieldWallPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.ShieldWallPvE, false);
        var setting = action.Setting;
        ModifyShieldWallPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="ShieldWallPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyShieldWallPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.ShieldWallPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction ShieldWallPvE => _ShieldWallPvECreator.Value;

    /// <inheritdoc cref="ShieldWallPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak1 => ShieldWallPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _StrongholdPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.StrongholdPvE, false);
        var setting = action.Setting;
        ModifyStrongholdPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="StrongholdPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyStrongholdPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.StrongholdPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction StrongholdPvE => _StrongholdPvECreator.Value;

    /// <inheritdoc cref="StrongholdPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak2 => StrongholdPvE;

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private readonly global::System.Lazy<global::RotationSolver.Basic.Actions.IBaseAction> _GunmetalSoulPvECreator = new(() =>
    {
        global::RotationSolver.Basic.Actions.IBaseAction action = new global::RotationSolver.Basic.Actions.BaseAction(global::RotationSolver.Basic.Data.ActionID.GunmetalSoulPvE, false);
        var setting = action.Setting;
        ModifyGunmetalSoulPvE(ref setting);
        action.Setting = setting;
        return action;
    });
    /// <summary>
/// Modify <inheritdoc cref="GunmetalSoulPvE"/>
/// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    static partial void ModifyGunmetalSoulPvE(ref global::RotationSolver.Basic.Actions.ActionSetting setting);
    /// <inheritdoc cref="global::RotationSolver.Basic.Data.ActionID.GunmetalSoulPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.SyntaxHelper", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction GunmetalSoulPvE => _GunmetalSoulPvECreator.Value;

    /// <inheritdoc cref="GunmetalSoulPvE"/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    private sealed protected override global::RotationSolver.Basic.Actions.IBaseAction LimitBreak3 => GunmetalSoulPvE;

    /// <inheritdoc/>
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.BasicRotationGenerator", "1.0.0.2")]
    protected GunbreakerRotation()
    {
        RoyalGuardPvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [ReleaseRoyalGuardPvE, RoyalGuardPvE], true);
        DangerZonePvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [BlastingZonePvE, DangerZonePvE], true);
        HeartOfStonePvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [HeartOfCorundumPvE, HeartOfStonePvE], true);
        GnashingFangPvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [WickedTalonPvE, SavageClawPvE, GnashingFangPvE], true);
        NebulaPvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [GreatNebulaPvE, NebulaPvE], true);
        BloodfestPvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [LionHeartPvE, NobleBloodPvE, ReignOfBeastsPvE, BloodfestPvE], true);
        ReignOfBeastsPvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [LionHeartPvE, NobleBloodPvE, ReignOfBeastsPvE], true);
        NoMercyPvEReplace = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [SonicBreakPvE, NoMercyPvE], true);
        BrutalShellPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [BrutalShellPvE, KeenEdgePvE], false);
        SolidBarrelPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [SolidBarrelPvE, BrutalShellPvE, KeenEdgePvE], false);
        SavageClawPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [GnashingFangPvEReplace, GnashingFangPvEReplace], false);
        DemonSlaughterPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [DemonSlaughterPvE, DemonSlicePvE], false);
        WickedTalonPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [GnashingFangPvEReplace, GnashingFangPvEReplace, GnashingFangPvEReplace], false);
        BrutalShellPvPCombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [BrutalShellPvP, KeenEdgePvP], false);
        SolidBarrelPvPCombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [SolidBarrelPvP, BrutalShellPvP, KeenEdgePvP], false);
        SavageClawPvPCombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [SavageClawPvP, GnashingFangPvP], false);
        WickedTalonPvPCombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [WickedTalonPvP, SavageClawPvP, GnashingFangPvP], false);
        NobleBloodPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [BloodfestPvEReplace, BloodfestPvEReplace], false);
        LionHeartPvECombo = new global::RotationSolver.Basic.Actions.BaseActionSet(() => [BloodfestPvEReplace, BloodfestPvEReplace, BloodfestPvEReplace], false);
    }

    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    private global::RotationSolver.Basic.Actions.IBaseAction[]? _AllBaseActions = null;
    [global::System.CodeDom.Compiler.GeneratedCode("RotationSolver.GameData.CodeGenerator", "1.0.0.2")]
    /// <inheritdoc/>
    public override global::RotationSolver.Basic.Actions.IBaseAction[] AllBaseActions => _AllBaseActions ??= [KeenEdgePvE, NoMercyPvE, BrutalShellPvE, CamouflagePvE, DemonSlicePvE, RoyalGuardPvE, LightningShotPvE, DangerZonePvE, SolidBarrelPvE, GnashingFangPvE, SavageClawPvE, NebulaPvE, DemonSlaughterPvE, WickedTalonPvE, AuroraPvE, SuperbolidePvE, SonicBreakPvE, ContinuationPvE, JugularRipPvE, AbdomenTearPvE, EyeGougePvE, BowShockPvE, HeartOfLightPvE, HeartOfStonePvE, BurstStrikePvE, FatedCirclePvE, BloodfestPvE, BlastingZonePvE, HeartOfCorundumPvE, HypervelocityPvE, DoubleDownPvE, KeenEdgePvP, BrutalShellPvP, SolidBarrelPvP, BurstStrikePvP, GnashingFangPvP, SavageClawPvP, WickedTalonPvP, DoubleDownPvP, ContinuationPvP, HypervelocityPvP, JugularRipPvP, AbdomenTearPvP, EyeGougePvP, RoughDividePvP, DrawAndJunctionPvP, JunctionedCastPvP, NebulaPvP, BlastingZonePvP, AuroraPvP, RelentlessRushPvP, TerminalTriggerPvP, ReleaseRoyalGuardPvE, TrajectoryPvE, GreatNebulaPvE, FatedBrandPvE, ReignOfBeastsPvE, NobleBloodPvE, LionHeartPvE, LimitBreak1, LimitBreak2, LimitBreak3, ..base.AllBaseActions];
}